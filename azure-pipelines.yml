trigger:
  - main

pool:
  name: Default

steps:
  # Step 1: Run the initial full build and analysis to create `idir` (only run manually the first time)
  - task: synopsys-coverity@1
    displayName: 'Run Coverity Full Scan (Initial Setup)'
    inputs:
      coverityService: 'coverity-connect'
      projectName: 'test'
      streamName: 'test'
      coverityBuildDirectory: '$(Build.Repository.LocalPath)'
      coverityAnalysisType: 'full'
      buildCommand: 'mvn clean install'
      allowUntrusted: true
      covAnalyzeArgs: '--webapp-security'
    condition: eq(variables['Build.Reason'], 'Manual')  # Run only when manually triggered

  # Step 2: Publish the `idir` as a pipeline artifact (only after a full scan)
  - task: PublishPipelineArtifact@1
    displayName: 'Publish idir as Artifact'
    inputs:
      targetPath: '$(Build.Repository.LocalPath)/idir'
      artifact: 'idir'
      publishLocation: 'pipeline'
    condition: eq(variables['Build.Reason'], 'Manual')  # Publish only after full scans

  # Step 3: Download the `idir` artifact in subsequent pipeline runs for incremental analysis
  - task: DownloadPipelineArtifact@2
    displayName: 'Download idir Artifact'
    inputs:
      artifact: 'idir'
      targetPath: '$(Build.Repository.LocalPath)/idir'

  # Check if `idir` was successfully downloaded
  - script: |
      if [ ! -d "$(Build.Repository.LocalPath)/idir" ]; then
        echo "idir directory not found. Skipping incremental analysis."
        exit 0  # Exit gracefully if `idir` is missing
      fi
    displayName: 'Check if idir Exists'

  # Step 4: Run Incremental Analysis with `cov-run-desktop` (only if `idir` exists)
  - task: synopsys-coverity@1
    displayName: 'Run Incremental Coverity Analysis'
    inputs:
      coverityService: 'coverity-connect'
      projectName: 'test'
      streamName: 'test'
      coverityBuildDirectory: '$(Build.Repository.LocalPath)'
      coverityAnalysisType: 'incremental'
      allowUntrusted: true
      covDesktopArgs: '--analyze-captured-source'
