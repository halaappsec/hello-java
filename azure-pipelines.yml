trigger:
  - main

pool:
  name: Default

# Define the persistent path for storing idir
variables:
  sharedIdirPath: '/home/appsec/shared/idir'  # Adjust this path as needed

steps:
  # Step 1: Restore the idir if it exists; otherwise, indicate a full scan is needed
  - task: Bash@3
    displayName: 'Restore idir or Prepare for Full Scan'
    inputs:
      targetType: 'inline'
      script: |
        if [ -d "$(sharedIdirPath)" ]; then
          echo "Restoring idir from shared location..."
          mkdir -p $(Build.Repository.LocalPath)/idir
          cp -r $(sharedIdirPath)/* $(Build.Repository.LocalPath)/idir
          echo "idir restored successfully; proceeding with incremental scan."
        else
          echo "No previous idir found; performing full scan."
          echo "full_scan_needed=true" >> $(Build.Repository.LocalPath)/scan_mode.env
        fi

  # Step 2: Load the scan mode environment variable to determine scan type
  - task: Bash@3
    displayName: 'Load Scan Mode'
    inputs:
      targetType: 'inline'
      script: |
        if [ -f "$(Build.Repository.LocalPath)/scan_mode.env" ]; then
          source $(Build.Repository.LocalPath)/scan_mode.env
        fi

  # Step 3: Conditional Full Coverity Scan if idir is missing
  - task: synopsys-coverity@1
    displayName: 'Run Full Coverity Scan'
    condition: eq(variables['full_scan_needed'], 'true')
    inputs:
      coverityService: 'coverity-connect'
      projectName: 'test'
      streamName: 'test'
      coverityBuildDirectory: '$(Build.Repository.LocalPath)'
      buildCommand: 'mvn clean install'
      allowUntrusted: true
      covAnalyzeArgs: '--webapp-security'

  # Step 4: Conditional Incremental Coverity Scan if idir is available
  - task: synopsys-coverity@1
    displayName: 'Run Incremental Coverity Scan'
    condition: ne(variables['full_scan_needed'], 'true')
    inputs:
      coverityService: 'coverity-connect'
      projectName: 'SC.Integration.ZATCA.Portal.Services'
      streamName: 'SC.Integration.ZATCA.Portal.Services'
      coverityBuildDirectory: '$(Build.Repository.LocalPath)'
      coverityAnalysisType: 'incremental'
      allowUntrusted: true
      covDesktopArgs: '--analyze-captured-source'

  # Step 5: Save the updated idir for future incremental scans
  - task: Bash@3
    displayName: 'Save idir to Shared Location'
    inputs:
      targetType: 'inline'
      script: |
        echo "Saving updated idir to shared location for future incremental scans..."
        mkdir -p $(sharedIdirPath)
        cp -r $(Build.Repository.LocalPath)/idir/* $(sharedIdirPath)
